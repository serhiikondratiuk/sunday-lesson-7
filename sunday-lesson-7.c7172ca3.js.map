{"version":3,"sources":["index.js"],"names":["getUnique","firstArr","secondArr","filter","el","index","array","indexOf","sort","reduce","acc","includes","console","log","first","second"],"mappings":";AAyDA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,WAAA,MAAA,EAAA,cAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAjDA,IAAMA,EAAY,SAACC,EAAUC,GAUrB,MAAA,GAAID,OAAAA,EAAAA,GAAaC,EAAAA,IACtBC,OAAO,SAACC,EAAIC,EAAOC,GACZD,OAAAA,IAAUC,EAAMC,QAAQH,KAE/BI,OACAC,OAAO,SAACC,EAAKN,GACN,OAACH,EAASU,SAASP,IAAQF,EAAUS,SAASP,GAElDM,EADIA,GAAAA,OAAAA,EAAAA,GAAKN,CAAAA,KAEV,KAGLQ,QAAQC,IAAIb,EAAUc,MAAOC","file":"sunday-lesson-7.c7172ca3.js","sourceRoot":"..","sourcesContent":["// Найти различия между цифрами в 2 массивах\r\n\r\n// const first = [1, 3, 3, 4, 6, 5, 4];\r\n// const second = [6, 3, 5, 2, 2];\r\n\r\n// const third = [8, 13, 222, 93, 43, 11];\r\n// const fourth = [8, 222, 12, 93, 77, 83, 12, 43];\r\n\r\nconst getUnique = (firstArr, secondArr) => {\r\n // 1 variant\r\n //  const thirdArray = [...firstArr, ...secondArr];\r\n //  const newArray = thirdArray.filter((number, index) => {\r\n //   return index === thirdArray.indexOf(number);\r\n //  });\r\n //  return newArray.reduce((acc, el) => {\r\n //   return !firstArr.includes(el) || !secondArr.includes(el) ? [...acc, el] : acc;\r\n //  }, []);\r\n // 2 variant\r\n return [...firstArr, ...secondArr]\r\n  .filter((el, index, array) => {\r\n   return index === array.indexOf(el);\r\n  })\r\n  .sort()\r\n  .reduce((acc, el) => {\r\n   return !firstArr.includes(el) || !secondArr.includes(el)\r\n    ? [...acc, el]\r\n    : acc;\r\n  }, []);\r\n};\r\n\r\nconsole.log(getUnique(first, second));\r\n\r\n// -----------------------------------------------------------\r\n// Джейден Смит, сын Уилла Смита, является звездой таких фильмов,\r\n// как The Karate Kid (2010) и After Earth (2013). Джейден также\r\n// известен своей философией, которую он распространяет через Twitter.\r\n// Когда он пишет в Твиттере, он известен тем, что почти всегда использует\r\n// каждое слово с большой буквы. Для простоты вам придется писать каждое слово\r\n// с заглавной буквы, посмотрите, как ожидается сокращение в приведенном ниже примере.\r\n// Ваша задача - преобразовать строки в то, как они были бы написаны Джейденом Смитом.\r\n// Строки - это настоящие цитаты Джейдена Смита, но они не пишутся с заглавной\r\n// буквы так, как он их изначально набирал.\r\n\r\n// String.prototype.toJadenCase = function () {\r\n//  return this.split(' ')\r\n//   .map(el => el.replace(el[0], el[0].toUpperCase()))\r\n//   .join(' ');\r\n// };\r\n\r\n// function toJadenCase(string) {\r\n//  return string\r\n//   .split(' ')\r\n//   .map(el => el.replace(el[0], el[0].toUpperCase()))\r\n//   .join(' ');\r\n// }\r\n// const sentence = \"How can mirrors be real if our eyes aren't real\";\r\n// console.log(sentence.toJadenCase());\r\n// console.log(toJadenCase(sentence));\r\n"]}